services:
  backend:
    build: ./backend
    ports:
      - "8081:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=secretpassword
      - DB_NAME=authdb
    depends_on:
      - postgres

  postgres:
    image: postgres:latest  # Use the latest version or a specific one
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: postgres           # PostgreSQL username
      POSTGRES_PASSWORD: secretpassword   # PostgreSQL password
      POSTGRES_DB: authdb         # Default database name
    ports:
      - "5432:5432"  # Map PostgreSQL port to host
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistent data storage

  pgadmin:
    image: dpage/pgadmin4  # Latest pgAdmin image
    container_name: pgadmin_container
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com  # Login email for pgAdmin
      PGADMIN_DEFAULT_PASSWORD: admin          # Password for pgAdmin
    ports:
      - "8080:80"  # Map pgAdmin port to host
    depends_on:
      - postgres

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app  # Mount your local frontend directory to the container
      - /app/node_modules  # Prevents overwriting node_modules with local host version
    depends_on:
      - backend 
    command: npm run dev  # Run Next.js in development mode


volumes:
  postgres_data:
    driver: local
